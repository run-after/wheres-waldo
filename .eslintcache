[{"/home/chaaase/the_odin_project/javascript/wheres-waldo/src/App.js":"1","/home/chaaase/the_odin_project/javascript/wheres-waldo/src/components/Header.js":"2","/home/chaaase/the_odin_project/javascript/wheres-waldo/src/components/Picture.js":"3","/home/chaaase/the_odin_project/javascript/wheres-waldo/src/index.js":"4","/home/chaaase/the_odin_project/javascript/wheres-waldo/src/components/Timer.js":"5","/home/chaaase/the_odin_project/javascript/wheres-waldo/src/components/Scoreboard.js":"6"},{"size":1561,"mtime":1613069486559,"results":"7","hashOfConfig":"8"},{"size":1580,"mtime":1612979313508,"results":"9","hashOfConfig":"8"},{"size":3819,"mtime":1613068718437,"results":"10","hashOfConfig":"8"},{"size":652,"mtime":1612370684426,"results":"11","hashOfConfig":"8"},{"size":2035,"mtime":1613068151409,"results":"12","hashOfConfig":"8"},{"size":3859,"mtime":1613069459514,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"kl786l",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/chaaase/the_odin_project/javascript/wheres-waldo/src/App.js",["28"],"import './styles/App.css';\nimport Picture from './components/Picture';\nimport Header from './components/Header';\nimport firebase from 'firebase';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [name, setName] = useState('');\n\n  const db = firebase.firestore();\n\n  const [characters, setCharacters] = useState({});\n\n  // get all coords from DB and set them in characters object\n  const loadCharacters = () => {\n    let tempCharacters = {};\n    db.collection('Troy').doc('listOfCharacters').get().then((doc) => {\n      const charArray = doc.data().characters;\n      charArray.forEach((character) => {\n        db.collection('Troy').doc('characters')\n          .collection(character)\n          .doc('coords')\n          .get()\n          .then((doc) => {\n            tempCharacters[character] = doc.data();\n            if (Object.keys(tempCharacters).length === 4) {\n              setCharacters(tempCharacters);\n            };\n        });\n      });\n    });\n  };\n\n  useEffect(() => {\n\n    firebase.auth().signInAnonymously().catch((error) => {\n      console.log(error)\n    });   \n    \n    loadCharacters();\n\n  }, []);\n\n  return (\n    <div className='container'>\n      <Header setName={setName}/>\n      {Object.keys(characters).length === 4 && <Picture characters={characters} name={name} />}\n    </div>\n  );\n};\n\nexport default App;\n\n// TODO:\n\n// Make initial screen that allows selection of map\n// in Picture - remove event listener after game over\n\n// Timer - remove setInterval after game over\n\n// Maybe add a restart button? After game over","/home/chaaase/the_odin_project/javascript/wheres-waldo/src/components/Header.js",[],"/home/chaaase/the_odin_project/javascript/wheres-waldo/src/components/Picture.js",["29"],"import '../styles/Picture.css';\nimport { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport Scoreboard from './Scoreboard';\n\nconst Picture = (props) => {\n\n  const [score, setScore] = useState(0);\n\n  const characters = props.characters;\n\n  const db = firebase.firestore();\n\n  // I can have a screen before this displays giving choices of maps\n  // I can pass in the choice of map via props when this is rendered\n  const storage = firebase.storage();\n  const storageRef = storage.ref('maps_troy.jpeg');\n\n  let timeStart;\n  let timeEnd;\n\n  const loadMap = () => {\n    storageRef.getDownloadURL().then((url) => {\n      const pic = document.querySelector('#image');\n      pic.setAttribute('src', url);\n    }).catch((error) => {\n      console.log(error)\n    });\n  };\n  \n  const isGameOver = () => {\n    return Object.keys(characters).length === 0;\n  };\n\n  const popUpSelection = (event) => {\n    const currentSelector = document.querySelector('.selector');\n    if (currentSelector) { currentSelector.remove() };\n    \n    const x = event.layerX;\n    const y = event.layerY;\n    const selector = document.createElement('div');\n    selector.classList.add('selector');    \n    selector.style = `left: ${x - 25}px; top: ${y - 25}px;`;\n    const pic = document.querySelector('.picture');\n    pic.appendChild(selector);\n  };\n\n  const dropDownSelection = (event) => {\n    const currentMenu = document.querySelector('.menu');\n    if (currentMenu) { currentMenu.remove() };\n    \n    const x = event.layerX;\n    const y = event.layerY;\n    const menu = document.createElement('div');\n    menu.classList.add('menu');\n    menu.style = `left: ${x + 25}px; top: ${y + 25}px;`;\n    Object.keys(characters).forEach((person) => {\n      const btn = document.createElement('button');\n      btn.classList.add('person-selector');\n      btn.textContent = person;\n      btn.value = person;\n      menu.appendChild(btn);\n      btn.addEventListener('click', () => {\n        makeGuess(person, x, y);\n      });\n    });\n    const pic = document.querySelector('.picture');\n    pic.appendChild(menu);\n  };\n\n  const makeGuess = (person, x, y) => {\n    const menu = document.querySelector('.menu');\n    const selector = document.querySelector('.selector');\n    if((x >= characters[person].x - 25 && x <= characters[person].x + 25) &&\n      (y >= characters[person].y - 30 && y <= characters[person].y + 30)) {\n      const char = document.querySelector(`#${person}-img`);\n      char.style = 'opacity: 0.25;';\n      delete characters[person];\n      menu.remove();\n      selector.classList.remove('selector');\n      selector.classList.add('correct');\n\n      if (isGameOver()) {\n        timeEnd = new Date().getTime();\n        // Read timeStart from DB\n        db.collection('Troy').doc(firebase.auth().currentUser.uid).get().then((doc) => {\n          timeStart = doc.data().timeStart;\n          //Set end time to DB\n          db.collection('Troy').doc(firebase.auth().currentUser.uid).set({\n            timeStart: timeStart,\n            timeEnd: new Date().getTime()\n          }).then(() => {\n            setScore(timeEnd - timeStart);\n          });\n        });\n        const timer = document.querySelector('.timer');\n        // stop timer\n        timer.textContent = '';\n      };\n    } else {\n      menu.remove();\n      selector.remove();\n      console.log('Wrong');\n    };\n  };\n\n  useEffect(() => {\n    const img = document.getElementById('image');\n    \n    img.addEventListener('click', (e) => {\n      popUpSelection(e);\n      dropDownSelection(e);\n    });\n\n    loadMap();\n\n  }, []);\n  // If map is passed in via props, so too would this 'alt'\n  return (\n    <div className='picture'>\n      <img id='image' alt='Troy' />\n      {isGameOver() && <Scoreboard score={score} name={props.name}/>}\n    </div>\n  );\n};\n\nexport default Picture;","/home/chaaase/the_odin_project/javascript/wheres-waldo/src/index.js",[],"/home/chaaase/the_odin_project/javascript/wheres-waldo/src/components/Timer.js",[],"/home/chaaase/the_odin_project/javascript/wheres-waldo/src/components/Scoreboard.js",[],{"ruleId":"30","severity":1,"message":"31","line":43,"column":6,"nodeType":"32","endLine":43,"endColumn":8,"suggestions":"33"},{"ruleId":"30","severity":1,"message":"34","line":117,"column":6,"nodeType":"32","endLine":117,"endColumn":8,"suggestions":"35"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCharacters'. Either include it or remove the dependency array.","ArrayExpression",["36"],"React Hook useEffect has missing dependencies: 'dropDownSelection' and 'loadMap'. Either include them or remove the dependency array.",["37"],{"desc":"38","fix":"39"},{"desc":"40","fix":"41"},"Update the dependencies array to be: [loadCharacters]",{"range":"42","text":"43"},"Update the dependencies array to be: [dropDownSelection, loadMap]",{"range":"44","text":"45"},[1131,1133],"[loadCharacters]",[3564,3566],"[dropDownSelection, loadMap]"]