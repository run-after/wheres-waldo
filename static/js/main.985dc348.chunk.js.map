{"version":3,"sources":["components/Scoreboard.js","components/Picture.js","components/Timer.js","components/Header.js","App.js","index.js"],"names":["Scoreboard","props","scores","db","firebase","firestore","collection","doc","get","then","data","index","findIndex","i","score","time","player","name","splice","pop","set","forEach","x","place","document","getElementById","querySelector","textContent","formatTimer","min","Math","floor","sec","centiSec","milSec","toString","padStart","auth","currentUser","uid","delete","className","id","Picture","timeStart","timeEnd","useState","setScore","characters","storageRef","storage","ref","isGameOver","Object","keys","length","makeGuess","person","y","menu","selector","style","remove","classList","add","Date","getTime","console","log","useEffect","addEventListener","e","event","currentSelector","layerX","layerY","createElement","appendChild","popUpSelection","currentMenu","btn","value","dropDownSelection","getDownloadURL","url","setAttribute","catch","error","alt","Timer","troy","timerOn","timer","setTimer","onSubmit","setName","startTime","setInterval","required","maxLength","type","placeholder","Header","child","App","setCharacters","signInAnonymously","tempCharacters","character","loadCharacters","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.985dc348.chunk.js","sourcesContent":["import '../styles/Scoreboard.css';\nimport firebase from 'firebase';\n\nconst Scoreboard = (props) => {\n \n  const db = firebase.firestore();\n\n  let scores;\n\n  db.collection('Troy').doc('hiScores').get().then((doc) => {\n    scores = doc.data();\n  }).then(() => {\n    let index = scores.scores.findIndex(i => props.score < i.time); \n    const player = { name: props.name, time: props.score };\n    if (index > -1) {\n      scores.scores.splice(index, 0, player);\n      scores.scores.pop();\n      // Write scores to DB\n      db.collection('Troy').doc('hiScores').set(scores);\n    };\n  }).then(() => {\n    // display existing scores\n    scores.scores.forEach((x,i) =>{\n      const place = document.getElementById(i + 1);\n      const name = place.querySelector('.name');\n      name.textContent = scores.scores[i].name;\n      const time = place.querySelector('.time');\n      time.textContent = formatTimer(scores.scores[i].time);\n    });\n  });\n\n  // Maybe can move this to a different module... this and from Timer\n  const formatTimer = (time) => {\n    if (time === 9999999999) {\n      return '99:99:99';\n    } else {\n      let min = Math.floor(time / 60000);\n      if (min > 59) {\n        min = min % 60;\n      };\n      let sec = Math.floor(time / 1000);\n      if (sec > 59) {\n        sec = sec % 60;\n      };\n      let centiSec = Math.floor(time / 100);\n      if (centiSec > 10) {\n        centiSec = centiSec % 10;\n      };\n      let milSec = Math.floor(time / 10);\n      if (milSec > 10) {\n        milSec = milSec % 10;\n      };\n      return `${min.toString().padStart(2, '0')}:${sec.toString().padStart(2, '0')}:${centiSec}${milSec}`;\n    }\n  };\n\n  const timer = document.querySelector('.timer');\n  timer.textContent = formatTimer(props.score);\n\n  // Delete start/stop time from DB\n  db.collection('Troy').doc(firebase.auth().currentUser.uid).delete();\n\n  return (\n    <div className='scoreboard'>\n      <div className='banner'>\n        <span className='place'>Place</span>\n        <span className='name'>Name</span>\n        <span className='time'>Time</span>\n      </div>\n      <div className='score-spot' id='1'>\n        <span className='place'>1</span>\n        <span className='name'></span>\n        <span className='time'></span>\n      </div>\n      <div className='score-spot' id='2'>\n        <span className='place'>2</span>\n        <span className='name'></span>\n        <span className='time'></span>\n      </div>\n      <div className='score-spot' id='3'>\n        <span className='place'>3</span>\n        <span className='name'></span>\n        <span className='time'></span>\n      </div>\n      <div className='score-spot' id='4'>\n        <span className='place'>4</span>\n        <span className='name'></span>\n        <span className='time'></span>\n      </div>\n      <div className='score-spot' id='5'>\n        <span className='place'>5</span>\n        <span className='name'></span>\n        <span className='time'></span>\n      </div>\n      <div className='score-spot' id='6'>\n        <span className='place'>6</span>\n        <span className='name'></span>\n        <span className='time'></span>\n      </div>\n      <div className='score-spot' id='7'>\n        <span className='place'>7</span>\n        <span className='name'></span>\n        <span className='time'></span>\n      </div>\n      <div className='score-spot' id='8'>\n        <span className='place'>8</span>\n        <span className='name'></span>\n        <span className='time'></span>\n      </div>\n      <div className='score-spot' id='9'>\n        <span className='place'>9</span>\n        <span className='name'></span>\n        <span className='time'></span>\n      </div>\n      <div className='score-spot ten' id='10'>\n        <span className='place'>10</span>\n        <span className='name'></span>\n        <span className='time'></span>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Scoreboard;","import '../styles/Picture.css';\nimport { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport Scoreboard from './Scoreboard';\n\nconst Picture = (props) => {\n\n  const [score, setScore] = useState(0);\n\n  const characters = props.characters;\n\n  const db = firebase.firestore();\n\n  // I can have a screen before this displays giving choices of maps\n  // I can pass in the choice of map via props when this is rendered\n  const storage = firebase.storage();\n  const storageRef = storage.ref('maps_troy.jpeg');\n\n  let timeStart;\n  let timeEnd;\n\n  const loadMap = () => {\n    storageRef.getDownloadURL().then((url) => {\n      const pic = document.querySelector('#image');\n      pic.setAttribute('src', url);\n    }).catch((error) => {\n      console.log(error)\n    });\n  };\n  \n  const isGameOver = () => {\n    return Object.keys(characters).length === 0;\n  };\n\n  const popUpSelection = (event) => {\n    const currentSelector = document.querySelector('.selector');\n    if (currentSelector) { currentSelector.remove() };\n    \n    const x = event.layerX;\n    const y = event.layerY;\n    const selector = document.createElement('div');\n    selector.classList.add('selector');    \n    selector.style = `left: ${x - 25}px; top: ${y - 25}px;`;\n    const pic = document.querySelector('.picture');\n    pic.appendChild(selector);\n  };\n\n  const dropDownSelection = (event) => {\n    const currentMenu = document.querySelector('.menu');\n    if (currentMenu) { currentMenu.remove() };\n    \n    const x = event.layerX;\n    const y = event.layerY;\n    const menu = document.createElement('div');\n    menu.classList.add('menu');\n    menu.style = `left: ${x + 25}px; top: ${y + 25}px;`;\n    Object.keys(characters).forEach((person) => {\n      const btn = document.createElement('button');\n      btn.classList.add('person-selector');\n      btn.textContent = person;\n      btn.value = person;\n      menu.appendChild(btn);\n      btn.addEventListener('click', () => {\n        makeGuess(person, x, y);\n      });\n    });\n    const pic = document.querySelector('.picture');\n    pic.appendChild(menu);\n  };\n\n  const makeGuess = (person, x, y) => {\n    const menu = document.querySelector('.menu');\n    const selector = document.querySelector('.selector');\n    if((x >= characters[person].x - 25 && x <= characters[person].x + 25) &&\n      (y >= characters[person].y - 30 && y <= characters[person].y + 30)) {\n      const char = document.querySelector(`#${person}-img`);\n      char.style = 'opacity: 0.25;';\n      delete characters[person];\n      menu.remove();\n      selector.classList.remove('selector');\n      selector.classList.add('correct');\n\n      if (isGameOver()) {\n        timeEnd = new Date().getTime();\n        // Read timeStart from DB\n        db.collection('Troy').doc(firebase.auth().currentUser.uid).get().then((doc) => {\n          timeStart = doc.data().timeStart;\n          //Set end time to DB\n          db.collection('Troy').doc(firebase.auth().currentUser.uid).set({\n            timeStart: timeStart,\n            timeEnd: new Date().getTime()\n          }).then(() => {\n            setScore(timeEnd - timeStart);\n          });\n        });\n        const timer = document.querySelector('.timer');\n        // stop timer\n        timer.textContent = '';\n      };\n    } else {\n      menu.remove();\n      selector.remove();\n      console.log('Wrong');\n    };\n  };\n\n  useEffect(() => {\n    const img = document.getElementById('image');\n    \n    img.addEventListener('click', (e) => {\n      popUpSelection(e);\n      dropDownSelection(e);\n    });\n\n    loadMap();\n\n  }, []);\n  // If map is passed in via props, so too would this 'alt'\n  return (\n    <div className='picture'>\n      <img id='image' alt='Troy' />\n      {isGameOver() && <Scoreboard score={score} name={props.name}/>}\n    </div>\n  );\n};\n\nexport default Picture;","import { useState } from 'react';\nimport '../styles/Timer.css';\nimport firebase from 'firebase';\nimport 'firebase/firestore';// not sure if useful\n\nconst Timer = (props) => {\n\n  const db = firebase.firestore();\n  const troy = db.collection('Troy');\n\n  const [timer, setTimer] = useState({\n    timerOn: false,\n    timeStart: 0,\n    time: 0\n  });\n  // This is temporary. I will get startTime from DB\n  const startTimer = () => {\n    const name = document.querySelector('#name');\n    props.setName(name.value);\n    const blockOut = document.querySelector('.block-out-box');\n    blockOut.remove();\n    let startTime = new Date().getTime();\n    // Save time start to DB\n    troy.doc(firebase.auth().currentUser.uid).set({\n      timeStart: startTime\n    });\n    ///////////////////////\n\n    // This updates timer on screen\n    setInterval(() => {\n      setTimer({\n        timerOn: true,\n        timeStart: startTime,\n        time: new Date().getTime() - startTime\n      });\n    }, 10);\n  };\n\n  const formatTimer = (time) => {\n    let min = Math.floor(time / 60000);\n    if (min > 59) {\n      min = min % 60;\n    };\n    let sec = Math.floor(time / 1000);\n    if (sec > 59) {\n      sec = sec % 60;\n    };\n    let centiSec = Math.floor(time / 100);\n    if (centiSec > 10) {\n      centiSec = centiSec % 10;\n    };\n    let milSec = Math.floor(time / 10);\n    if (milSec > 10) {\n      milSec = milSec % 10;\n    };\n    return `${min.toString().padStart(2, '0')}:${sec.toString().padStart(2, '0')}:${centiSec}${milSec}`;\n  };\n\n  return (\n    <div className='timer'>\n      <div className='block-out-box'>\n        <h1>Click to begin</h1>\n        <p>When you click start, your timer will begin. Find all 4 characters</p>\n        <form onSubmit={startTimer}> \n          <input required={true} maxLength='15' id='name' type='text' placeholder='Please enter your name' />\n          <button type='submit' className='start-button'>Start</button>\n        </form>\n        \n      </div>\n      {formatTimer(timer.time)}\n    </div>\n  )\n\n};\n\nexport default Timer;","import Timer from './Timer';\nimport '../styles/Header.css';\nimport firebase from 'firebase';\nimport 'firebase/storage';// not sure if doing anything\n\n\nconst Header = (props) => {\n\n  const storage = firebase.storage();\n  const storageRef = storage.ref();\n\n  // Figure out a way to DRY this up\n\n  storageRef.child('waldo.png').getDownloadURL().then((url) => {\n    const waldo = document.querySelector('#waldo-img');\n    waldo.setAttribute('src', url);\n  }).catch((error) => {\n    console.log(error)\n  });\n\n  storageRef.child('wilma.png').getDownloadURL().then((url) => {\n    const waldo = document.querySelector('#wilma-img');\n    waldo.setAttribute('src', url);\n  }).catch((error) => {\n    console.log(error)\n  });\n\n  storageRef.child('odlaw.png').getDownloadURL().then((url) => {\n    const waldo = document.querySelector('#odlaw-img');\n    waldo.setAttribute('src', url);\n  }).catch((error) => {\n    console.log(error)\n  });\n\n  storageRef.child('wizard.png').getDownloadURL().then((url) => {\n    const waldo = document.querySelector('#wizard-img');\n    waldo.setAttribute('src', url);\n  }).catch((error) => {\n    console.log(error)\n  });\n\n  return (\n    <div className='header'>\n      <div className='character-container'>\n        <h6>Characters</h6>\n        <div className='characters'>\n          <img id='waldo-img' alt='waldo'/>\n          <img id='wilma-img' alt='wilma'/>\n          <img id='odlaw-img' alt='odlaw'/>\n          <img id='wizard-img' alt='wizard'/>\n        </div>\n      </div>\n      <Timer setName={props.setName}/>\n    </div>\n    \n  )\n\n};\n\nexport default Header;","import './styles/App.css';\nimport Picture from './components/Picture';\nimport Header from './components/Header';\nimport firebase from 'firebase';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [name, setName] = useState('');\n\n  const db = firebase.firestore();\n\n  const [characters, setCharacters] = useState({});\n\n  // get all coords from DB and set them in characters object\n  const loadCharacters = () => {\n    let tempCharacters = {};\n    db.collection('Troy').doc('listOfCharacters').get().then((doc) => {\n      const charArray = doc.data().characters;\n      charArray.forEach((character) => {\n        db.collection('Troy').doc('characters')\n          .collection(character)\n          .doc('coords')\n          .get()\n          .then((doc) => {\n            tempCharacters[character] = doc.data();\n            if (Object.keys(tempCharacters).length === 4) {\n              setCharacters(tempCharacters);\n            };\n        });\n      });\n    });\n  };\n\n  useEffect(() => {\n\n    firebase.auth().signInAnonymously().catch((error) => {\n      console.log(error)\n    });   \n    \n    loadCharacters();\n\n  }, []);\n\n  return (\n    <div className='container'>\n      <Header setName={setName}/>\n      {Object.keys(characters).length === 4 && <Picture characters={characters} name={name} />}\n    </div>\n  );\n};\n\nexport default App;\n\n// TODO:\n\n// Make initial screen that allows selection of map\n// in Picture - remove event listener after game over\n\n// Timer - remove setInterval after game over\n\n// Maybe add a restart button? After game over","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/reset.css';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDfrvu6lFPHgpa-VfobKgF3leWgziYxpqg\",\n  authDomain: \"where-s-waldo-f0b97.firebaseapp.com\",\n  projectId: \"where-s-waldo-f0b97\",\n  storageBucket: \"where-s-waldo-f0b97.appspot.com\",\n  messagingSenderId: \"5481585257\",\n  appId: \"1:5481585257:web:68f08a2aa08b0e968160f8\"\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}